import { FlattenSimpleInterpolation } from "styled-components";
declare enum MEDIA_STRATEGIES {
    UP = "up",
    DOWN = "down"
}
interface IMediaBreakpoints {
    readonly xl: number;
    readonly lg: number;
    readonly md: number;
    readonly sm: number;
    readonly xs: number;
}
interface IConfig {
    ignoreMediaMixins?: boolean;
    mediaStrategy?: string;
    mediaSizes?: IMediaBreakpoints;
}
interface IStyleMixins {
    display(value: string): FlattenSimpleInterpolation;
    position(value: string): FlattenSimpleInterpolation;
    float(value: string): FlattenSimpleInterpolation;
    clear(value: string): FlattenSimpleInterpolation;
    overflow(value: string): FlattenSimpleInterpolation;
    overflowX(value: string): FlattenSimpleInterpolation;
    overflowY(value: string): FlattenSimpleInterpolation;
    visibility(value: string): FlattenSimpleInterpolation;
    zIndex(value: string): FlattenSimpleInterpolation;
    height(value: string): FlattenSimpleInterpolation;
    width(value: string): FlattenSimpleInterpolation;
    minHeight(value: string): FlattenSimpleInterpolation;
    minWidth(value: string): FlattenSimpleInterpolation;
    maxHeight(value: string): FlattenSimpleInterpolation;
    maxWidth(value: string): FlattenSimpleInterpolation;
    margin(value: string): FlattenSimpleInterpolation;
    marginTop(value: string): FlattenSimpleInterpolation;
    marginBottom(value: string): FlattenSimpleInterpolation;
    marginLeft(value: string): FlattenSimpleInterpolation;
    marginRight(value: string): FlattenSimpleInterpolation;
    marginX(value: string): FlattenSimpleInterpolation;
    marginY(value: string): FlattenSimpleInterpolation;
    padding(value: string): FlattenSimpleInterpolation;
    paddingTop(value: string): FlattenSimpleInterpolation;
    paddingBottom(value: string): FlattenSimpleInterpolation;
    paddingLeft(value: string): FlattenSimpleInterpolation;
    paddingRight(value: string): FlattenSimpleInterpolation;
    paddingX(value: string): FlattenSimpleInterpolation;
    paddingY(value: string): FlattenSimpleInterpolation;
    top(value: string): FlattenSimpleInterpolation;
    bottom(value: string): FlattenSimpleInterpolation;
    left(value: string): FlattenSimpleInterpolation;
    right(value: string): FlattenSimpleInterpolation;
    color(value: string): FlattenSimpleInterpolation;
    fontSize(value: string): FlattenSimpleInterpolation;
    fontWeight(value: string): FlattenSimpleInterpolation;
    fontFamily(value: string): FlattenSimpleInterpolation;
    fontStyle(value: string): FlattenSimpleInterpolation;
    textAlign(value: string): FlattenSimpleInterpolation;
    textDecoration(value: string): FlattenSimpleInterpolation;
    hoverColor(value: string): FlattenSimpleInterpolation;
    lineHeight(value: string): FlattenSimpleInterpolation;
    letterSpacing(value: string): FlattenSimpleInterpolation;
    hyphens(value: string): FlattenSimpleInterpolation;
    textOverflow(value: string): FlattenSimpleInterpolation;
    textShadow(value: string): FlattenSimpleInterpolation;
    textTransform(value: string): FlattenSimpleInterpolation;
    light(): FlattenSimpleInterpolation;
    bold(): FlattenSimpleInterpolation;
    underline(): FlattenSimpleInterpolation;
    normal(): FlattenSimpleInterpolation;
    ellipsis(): FlattenSimpleInterpolation;
    noWrap(): FlattenSimpleInterpolation;
    border(value: string): FlattenSimpleInterpolation;
    borderTop(value: string): FlattenSimpleInterpolation;
    borderBottom(value: string): FlattenSimpleInterpolation;
    borderRight(value: string): FlattenSimpleInterpolation;
    borderLeft(value: string): FlattenSimpleInterpolation;
    borderColor(value: string): FlattenSimpleInterpolation;
    borderRadius(value: string): FlattenSimpleInterpolation;
    borderTopLeftRadius(value: string): FlattenSimpleInterpolation;
    borderTopRightRadius(value: string): FlattenSimpleInterpolation;
    borderBottomRightRadius(value: string): FlattenSimpleInterpolation;
    borderBottomLeftRadius(value: string): FlattenSimpleInterpolation;
    borderRightRadius(value: string): FlattenSimpleInterpolation;
    borderLeftRadius(value: string): FlattenSimpleInterpolation;
    borderTopRadius(value: string): FlattenSimpleInterpolation;
    borderBottomRadius(value: string): FlattenSimpleInterpolation;
    boxShadow(value: string): FlattenSimpleInterpolation;
    background(value: string): FlattenSimpleInterpolation;
    backgroundPosition(value: string): FlattenSimpleInterpolation;
    backgroundRepeat(value: string): FlattenSimpleInterpolation;
    backgroundSize(value: string): FlattenSimpleInterpolation;
    backgroundImage(value: string): FlattenSimpleInterpolation;
    backgroundColor(value: string): FlattenSimpleInterpolation;
    backgroundColorHover(value: string): FlattenSimpleInterpolation;
    backgroundAttachment(value: string): FlattenSimpleInterpolation;
    backgroundClip(value: string): FlattenSimpleInterpolation;
    backgroundOrigin(value: string): FlattenSimpleInterpolation;
    objectFit(value: string): FlattenSimpleInterpolation;
    flex(value: string): FlattenSimpleInterpolation;
    flexDirection(value: string): FlattenSimpleInterpolation;
    flexWrap(value: string): FlattenSimpleInterpolation;
    justifyContent(value: string): FlattenSimpleInterpolation;
    alignItems(value: string): FlattenSimpleInterpolation;
    alignContent(value: string): FlattenSimpleInterpolation;
    alignSelf(value: string): FlattenSimpleInterpolation;
    order(value: string): FlattenSimpleInterpolation;
    flexGrow(value: string): FlattenSimpleInterpolation;
    flexShrink(value: string): FlattenSimpleInterpolation;
    flexBasis(value: string): FlattenSimpleInterpolation;
    cursor(value: string): FlattenSimpleInterpolation;
    direction(value: string): FlattenSimpleInterpolation;
    opacity(value: string): FlattenSimpleInterpolation;
    overflowWrap(value: string): FlattenSimpleInterpolation;
    pointerEvents(value: string): FlattenSimpleInterpolation;
    transform(value: string): FlattenSimpleInterpolation;
    transition(value: string): FlattenSimpleInterpolation;
    transitionDelay(value: string): FlattenSimpleInterpolation;
    userSelect(value: string): FlattenSimpleInterpolation;
    whiteSpace(value: string): FlattenSimpleInterpolation;
    wordSpacing(value: string): FlattenSimpleInterpolation;
    wordWrap(value: string): FlattenSimpleInterpolation;
}
declare const DEFAULT_MEDIA_SIZES_UP: IMediaBreakpoints;
declare const DEFAULT_MEDIA_SIZES_DOWN: IMediaBreakpoints;
export { IMediaBreakpoints, IConfig, IStyleMixins };
export { MEDIA_STRATEGIES };
export { DEFAULT_MEDIA_SIZES_UP, DEFAULT_MEDIA_SIZES_DOWN };
